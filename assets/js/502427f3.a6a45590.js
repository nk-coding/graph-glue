"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4145],{64411:function(a,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return r},metadata:function(){return c},toc:function(){return u}});var e=t(87462),p=t(63366),i=(t(67294),t(3905)),s=t(56923),o=["components"],r={},l="<span>to</span><wbr/><span>Graph</span><wbr/><span><span>QLType</span></span>",c={unversionedId:"api/io.github.graphglue.connection.filter.definition/-simple-object-filter-definition-entry/to-graph-q-l-type-",id:"api/io.github.graphglue.connection.filter.definition/-simple-object-filter-definition-entry/to-graph-q-l-type-",title:"<span>to</span><wbr/><span>Graph</span><wbr/><span><span>QLType</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.connection.filter.definition/-simple-object-filter-definition-entry/to-graph-q-l-type-.mdx",sourceDirName:"api/io.github.graphglue.connection.filter.definition/-simple-object-filter-definition-entry",slug:"/api/io.github.graphglue.connection.filter.definition/-simple-object-filter-definition-entry/to-graph-q-l-type-",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.definition/-simple-object-filter-definition-entry/to-graph-q-l-type-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span><span>fields</span></span>",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.definition/-simple-object-filter-definition-entry/fields-"},next:{title:"<span>type</span><wbr/><span><span>Name</span></span>",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.definition/-simple-object-filter-definition-entry/type-name-"}},d={},u=[],h={toc:u};function g(a){var n=a.components,t=(0,p.Z)(a,o);return(0,i.kt)("wrapper",(0,e.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"tographqltype"},(0,i.kt)("span",null,"to"),(0,i.kt)("wbr",null),(0,i.kt)("span",null,"Graph"),(0,i.kt)("wbr",null),(0,i.kt)("span",null,(0,i.kt)("span",null,"QLType"))),(0,i.kt)(s.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword">open </span><span class="token keyword">override </span><span class="token keyword">fun </span><a href="to-graph-q-l-type-"><span class="token function">toGraphQLType</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">inputTypeCache<span class="token operator">: </span><a href="../../io.github.graphglue.util/-cache-map/index-">CacheMap</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span><span class="token keyword"></span><span data-unresolved-link="graphql.schema/GraphQLInputType///PointingToDeclaration/">GraphQLInputType</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="graphql.schema/GraphQLInputType///PointingToDeclaration/">GraphQLInputType</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><p class="paragraph">Transforms this into a <span data-unresolved-link="graphql.schema/GraphQLInputType///PointingToDeclaration/">GraphQLInputType</span></p><h4 class="">Return</h4><p class="paragraph">the generated type which will be used in the schema</p><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>input</span><wbr><span>Type</span><wbr><span><span>Cache</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">cache of already existing input types, should be used to avoid type duplicates</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}g.isMDXComponent=!0}}]);