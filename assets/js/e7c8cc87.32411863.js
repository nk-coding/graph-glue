"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3195],{14241:function(n,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return k},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var e=a(87462),i=a(63366),s=(a(67294),a(3905)),p=a(56923),r=["components"],o={},l="<span>Type</span><wbr/><span>Filter</span><wbr/><span>Definition</span><wbr/><span><span>Entry</span></span>",c={unversionedId:"api/io.github.graphglue.connection.filter/-type-filter-definition-entry/-type-filter-definition-entry-",id:"api/io.github.graphglue.connection.filter/-type-filter-definition-entry/-type-filter-definition-entry-",title:"<span>Type</span><wbr/><span>Filter</span><wbr/><span>Definition</span><wbr/><span><span>Entry</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.connection.filter/-type-filter-definition-entry/-type-filter-definition-entry-.mdx",sourceDirName:"api/io.github.graphglue.connection.filter/-type-filter-definition-entry",slug:"/api/io.github.graphglue.connection.filter/-type-filter-definition-entry/-type-filter-definition-entry-",permalink:"/graph-glue/api/io.github.graphglue.connection.filter/-type-filter-definition-entry/-type-filter-definition-entry-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span>Type</span><wbr/><span>Filter</span><wbr/><span>Definition</span><wbr/><span><span>Entry</span></span>",permalink:"/graph-glue/api/io.github.graphglue.connection.filter/-type-filter-definition-entry/index-"},next:{title:"<span>associated</span><wbr/><span><span>Type</span></span>",permalink:"/graph-glue/api/io.github.graphglue.connection.filter/-type-filter-definition-entry/associated-type-"}},d={},u=[],f={toc:u};function k(n){var t=n.components,a=(0,i.Z)(n,r);return(0,s.kt)("wrapper",(0,e.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"typefilterdefinitionentry"},(0,s.kt)("span",null,"Type"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,"Filter"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,"Definition"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,(0,s.kt)("span",null,"Entry"))),(0,s.kt)(p.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">fun </span><a href="-type-filter-definition-entry-"><span class="token function">TypeFilterDefinitionEntry</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">associatedType<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.reflect/-k-type/index.html">KType</a><span class="token punctuation">, </span></span><span class="parameter ">filterDefinitionFactory<span class="token operator">: </span><span class="token punctuation">(</span><span class="token keyword"></span>name<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span><span class="token keyword"></span>property<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.reflect/-k-property1/index.html">KProperty1</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token punctuation">, </span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">, </span><span class="token keyword"></span>parentNodeDefinition<span class="token operator">: </span><a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a><span class="token punctuation">, </span><span class="token keyword"></span>subFilterGenerator<span class="token operator">: </span><a href="../../io.github.graphglue.connection.filter.definition/-sub-filter-generator/index-">SubFilterGenerator</a><span class="token punctuation">)</span><span class="token operator"> -&gt; </span><span class="token keyword"></span><a href="../../io.github.graphglue.connection.filter.definition/-filter-entry-definition/index-">FilterEntryDefinition</a></span></span><span class="token punctuation">)</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>associated</span><wbr><span><span>Type</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">the supported type of the property</p></div></div></div></div></div><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>filter</span><wbr><span>Definition</span><wbr><span><span>Factory</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">function to convert the property into a filter</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}k.isMDXComponent=!0}}]);