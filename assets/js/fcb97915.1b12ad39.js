"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[25370],{59608:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>g,frontMatter:()=>p,metadata:()=>c,toc:()=>l});var o=a(87462),t=(a(67294),a(3905)),s=a(56923);const p={},i="edges",c={unversionedId:"api/graphglue-core/io.github.graphglue.connection.model/-connection/edges-",id:"api/graphglue-core/io.github.graphglue.connection.model/-connection/edges-",title:"edges",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.model/-connection/edges-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.model/-connection",slug:"/api/graphglue-core/io.github.graphglue.connection.model/-connection/edges-",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.model/-connection/edges-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Connection",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.model/-connection/-connection-"},next:{title:"nodes",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.model/-connection/nodes-"}},r={},l=[],d={toc:l};function g(e){let{components:n,...a}=e;return(0,t.kt)("wrapper",(0,o.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"edges"},"edges"),(0,t.kt)(s.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":graphglue-core:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">fun </span><a href="edges-"><span class="token function">edges</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="../-edge/index-">Edge</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="index-">T</a><span class="token operator">&gt;</span><span class="token operator">&gt;</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><p class="paragraph">Returns the nodes associated with a cursor local context is handled by the returned <a href="../-edge/index-">Edge</a> (see <a href="../-edge/node-">Edge.node</a>) and therefore not set by this method</p><h4 class="">Return</h4><p class="paragraph">a list of all edges</p></div></div>\n',mdxType:"DokkaComponent"}))}g.isMDXComponent=!0}}]);