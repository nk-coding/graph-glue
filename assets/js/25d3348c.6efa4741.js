"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3794],{50516:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>p,toc:()=>d});var i=t(87462),r=(t(67294),t(3905)),n=t(56923);const o={},s="filterForProperty",p={unversionedId:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/filter-for-property-",id:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/filter-for-property-",title:"filterForProperty",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/filter-for-property-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/filter-for-property-",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/filter-for-property-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"filterDefinitionCache",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/filter-definition-cache-"},next:{title:"nodeDefinitionCollection",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/node-definition-collection-"}},l={},d=[],c={toc:d};function f(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,i.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"filterforproperty"},"filterForProperty"),(0,r.kt)(n.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":graphglue-core:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">fun </span><a href="filter-for-property-"><span class="token function">filterForProperty</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">property<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.reflect/-k-property1/index.html">KProperty1</a><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token punctuation">, </span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">parentNodeDefinition<span class="token operator">: </span><a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../-filter-entry-definition/index-">FilterEntryDefinition</a><span class="token operator">?</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><p class="paragraph">Generates a <a href="../-filter-entry-definition/index-">FilterEntryDefinition</a> for a specified type with a specified name A filter for the type of the property must be defined in <a href="../../../graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/filters-">filters</a></p><h4 class="">Return</h4><p class="paragraph">the generated <a href="../-filter-entry-definition/index-">FilterEntryDefinition</a> if one was generated</p><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":graphglue-core:dokkaHtmlPartial/main" data-filterable-set=":graphglue-core:dokkaHtmlPartial/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span><span>property</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">the property to generate the filter for</p></div></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core:dokkaHtmlPartial/main" data-filterable-set=":graphglue-core:dokkaHtmlPartial/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>parent</span><wbr><span>Node</span><wbr><span><span>Definition</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">the definition of the <a href="../../io.github.graphglue.model/-node/index-">Node</a> type which contains the `property\xb4</p></div></div></div></div></div></div></div><h2 class="">Throws</h2><div class="table"><div class="table-row" data-filterable-current=":graphglue-core:dokkaHtmlPartial/main" data-filterable-set=":graphglue-core:dokkaHtmlPartial/main"><div class="main-subrow keyValue "><div class=""><span class="inline-flex"><div><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-illegal-state-exception/index.html"><span>kotlin.</span><wbr><span>Illegal</span><wbr><span>State</span><wbr><span><span>Exception</span></span></a></div></span></div><div><div class="title"><p class="paragraph">if no filter generator was found</p></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}f.isMDXComponent=!0}}]);