"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[73042],{25426:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var t=n(87462),a=(n(67294),n(3905)),o=n(56923);const r={},s="generateAuthorizationCondition",p={unversionedId:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-sub-filter-definition/generate-authorization-condition-",id:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-sub-filter-definition/generate-authorization-condition-",title:"generateAuthorizationCondition",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-sub-filter-definition/generate-authorization-condition-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-sub-filter-definition",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-sub-filter-definition/generate-authorization-condition-",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-sub-filter-definition/generate-authorization-condition-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"NodeSubFilterDefinition",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-sub-filter-definition/-node-sub-filter-definition-"},next:{title:"parseEntry",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.filter.definition/-node-sub-filter-definition/parse-entry-"}},l={},d=[],c={toc:d};function u(e){let{components:i,...n}=e;return(0,a.kt)("wrapper",(0,t.Z)({},c,n,{components:i,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"generateauthorizationcondition"},"generateAuthorizationCondition"),(0,a.kt)(o.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":graphglue-core:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">fun </span><a href="generate-authorization-condition-"><span class="token function">generateAuthorizationCondition</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">permission<span class="token operator">: </span><a href="../../io.github.graphglue.authorization/-permission/index-">Permission</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../../io.github.graphglue.data.execution/-cypher-condition-generator/index-">CypherConditionGenerator</a><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><p class="paragraph">Provides a condition generator used to filter for related nodes the Permissions allows to access Used to only include nodes in relation filters which the permission allows to access. Prevents a filter information leak.</p><h4 class="">Return</h4><p class="paragraph">the generated condition generator</p><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":graphglue-core:dokkaHtmlPartial/main" data-filterable-set=":graphglue-core:dokkaHtmlPartial/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span><span>permission</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">the current read permission, used to only consider nodes in filters which match the permission</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}u.isMDXComponent=!0}}]);