"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3944],{44887:function(a,e,n){n.r(e),n.d(e,{assets:function(){return u},contentTitle:function(){return r},default:function(){return v},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return m}});var t=n(87462),p=n(63366),s=(n(67294),n(3905)),o=n(56923),i=["components"],l={},r="<span>top</span><wbr/><span>Level</span><wbr/><span>Query</span><wbr/><span><span>Name</span></span>",d={unversionedId:"api/io.github.graphglue.model/-domain-node/top-level-query-name-",id:"api/io.github.graphglue.model/-domain-node/top-level-query-name-",title:"<span>top</span><wbr/><span>Level</span><wbr/><span>Query</span><wbr/><span><span>Name</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.model/-domain-node/top-level-query-name-.mdx",sourceDirName:"api/io.github.graphglue.model/-domain-node",slug:"/api/io.github.graphglue.model/-domain-node/top-level-query-name-",permalink:"/graph-glue/api/io.github.graphglue.model/-domain-node/top-level-query-name-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span>Domain</span><wbr/><span><span>Node</span></span>",permalink:"/graph-glue/api/io.github.graphglue.model/-domain-node/-domain-node-"},next:{title:"<span><span>Edge</span></span>",permalink:"/graph-glue/api/io.github.graphglue.model/-edge/index-"}},u={},m=[],c={toc:m};function v(a){var e=a.components,n=(0,p.Z)(a,i);return(0,s.kt)("wrapper",(0,t.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"toplevelqueryname"},(0,s.kt)("span",null,"top"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,"Level"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,"Query"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,(0,s.kt)("span",null,"Name"))),(0,s.kt)(o.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">val </span><a href="top-level-query-name-">topLevelQueryName</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html">String</a><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>top</span><wbr><span>Level</span><wbr><span>Query</span><wbr><span><span>Name</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">If not empty, a top level query of this node type is available with the given name</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}v.isMDXComponent=!0}}]);