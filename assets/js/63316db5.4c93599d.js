"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8271],{71961:function(a,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return o},default:function(){return b},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return u}});var e=n(87462),s=n(63366),i=(n(67294),n(3905)),r=n(56923),p=["components"],l={},o="<span>sub</span><wbr/><span>Meta</span><wbr/><span><span>Filters</span></span>",d={unversionedId:"api/io.github.graphglue.connection.filter.model/-and-meta-filter/sub-meta-filters-",id:"api/io.github.graphglue.connection.filter.model/-and-meta-filter/sub-meta-filters-",title:"<span>sub</span><wbr/><span>Meta</span><wbr/><span><span>Filters</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.connection.filter.model/-and-meta-filter/sub-meta-filters-.mdx",sourceDirName:"api/io.github.graphglue.connection.filter.model/-and-meta-filter",slug:"/api/io.github.graphglue.connection.filter.model/-and-meta-filter/sub-meta-filters-",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.model/-and-meta-filter/sub-meta-filters-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span>generate</span><wbr/><span><span>Condition</span></span>",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.model/-and-meta-filter/generate-condition-"},next:{title:"<span>Any</span><wbr/><span>Node</span><wbr/><span>Set</span><wbr/><span>Filter</span><wbr/><span><span>Entry</span></span>",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.model/-any-node-set-filter-entry/index-"}},c={},u=[],m={toc:u};function b(a){var t=a.components,n=(0,s.Z)(a,p);return(0,i.kt)("wrapper",(0,e.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"submetafilters"},(0,i.kt)("span",null,"sub"),(0,i.kt)("wbr",null),(0,i.kt)("span",null,"Meta"),(0,i.kt)("wbr",null),(0,i.kt)("span",null,(0,i.kt)("span",null,"Filters"))),(0,i.kt)(r.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">val </span><a href="sub-meta-filters-">subMetaFilters</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="../-meta-filter/index-">MetaFilter</a><span class="token operator">&gt;</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>sub</span><wbr><span>Meta</span><wbr><span><span>Filters</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">the list of filters to join</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}b.isMDXComponent=!0}}]);