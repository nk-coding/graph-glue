"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8216],{32773:function(a,e,n){n.r(e),n.d(e,{assets:function(){return c},contentTitle:function(){return d},default:function(){return v},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return u}});var t=n(87462),s=n(63366),i=(n(67294),n(3905)),r=n(56923),o=["components"],p={},d="generateManyNodeQuery",l={unversionedId:"api/io.github.graphglue.data.execution/-node-query-parser/generate-many-node-query-",id:"api/io.github.graphglue.data.execution/-node-query-parser/generate-many-node-query-",title:"generateManyNodeQuery",description:"",source:"@site/docs/api/io.github.graphglue.data.execution/-node-query-parser/generate-many-node-query-.mdx",sourceDirName:"api/io.github.graphglue.data.execution/-node-query-parser",slug:"/api/io.github.graphglue.data.execution/-node-query-parser/generate-many-node-query-",permalink:"/graph-glue/api/io.github.graphglue.data.execution/-node-query-parser/generate-many-node-query-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"filterDefinitionCollection",permalink:"/graph-glue/api/io.github.graphglue.data.execution/-node-query-parser/filter-definition-collection-"},next:{title:"generateOneNodeQuery",permalink:"/graph-glue/api/io.github.graphglue.data.execution/-node-query-parser/generate-one-node-query-"}},c={},u=[],g={toc:u};function v(a){var e=a.components,n=(0,s.Z)(a,o);return(0,i.kt)("wrapper",(0,t.Z)({},g,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"generatemanynodequery"},"generateManyNodeQuery"),(0,i.kt)(r.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">fun </span><a href="generate-many-node-query-"><span class="token function">generateManyNodeQuery</span></a><span class="token punctuation">(</span><span class="parameters wrapped"><span class="parameter indented">&nbsp;&nbsp;&nbsp;&nbsp;definition<span class="token operator">: </span><a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a><span class="token punctuation">, </span></span><span class="parameter indented">&nbsp;&nbsp;&nbsp;&nbsp;dataFetchingEnvironment<span class="token operator">: </span><span data-unresolved-link="graphql.schema/DataFetchingEnvironment///PointingToDeclaration/">DataFetchingEnvironment</span><span class="token operator">?</span><span class="token punctuation">, </span></span><span class="parameter indented">&nbsp;&nbsp;&nbsp;&nbsp;additionalConditions<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="../-cypher-condition-generator/index-">CypherConditionGenerator</a><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter indented">&nbsp;&nbsp;&nbsp;&nbsp;requiredPermission<span class="token operator">: </span><a href="../../io.github.graphglue.authorization/-permission/index-">Permission</a><span class="token operator">?</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../-node-query/index-">NodeQuery</a><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><p class="paragraph">Generates a <a href="../-node-query/index-">NodeQuery</a> which loads multiple <a href="../../io.github.graphglue.model/-node/index-">Node</a>s Can use the <code class="lang-kotlin">dataFetchingEnvironment</code> to fetch a subtree of node</p><h4 class="">Return</h4><p class="paragraph">the generated <a href="../-node-query/index-">NodeQuery</a> to load the node</p><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span><span>definition</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph"><a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a> of the nodes to load</p></div></div></div></div></div><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>data</span><wbr><span>Fetching</span><wbr><span><span>Environment</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">can optionally be provided to fetch a subtree of nodes</p></div></div></div></div></div><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>additional</span><wbr><span><span>Conditions</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">list of conditions which are applied to filter the returned node</p></div></div></div></div></div><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>required</span><wbr><span><span>Permission</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">optional required permission</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}v.isMDXComponent=!0}}]);