"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[838],{16391:function(a,n,e){e.r(n),e.d(n,{assets:function(){return u},contentTitle:function(){return r},default:function(){return g},frontMatter:function(){return d},metadata:function(){return l},toc:function(){return m}});var s=e(87462),t=e(63366),o=(e(67294),e(3905)),p=e(56923),i=["components"],d={},r="<span>Domain</span><wbr/><span><span>Node</span></span>",l={unversionedId:"api/io.github.graphglue.model/-domain-node/-domain-node-",id:"api/io.github.graphglue.model/-domain-node/-domain-node-",title:"<span>Domain</span><wbr/><span><span>Node</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.model/-domain-node/-domain-node-.mdx",sourceDirName:"api/io.github.graphglue.model/-domain-node",slug:"/api/io.github.graphglue.model/-domain-node/-domain-node-",permalink:"/graph-glue/api/io.github.graphglue.model/-domain-node/-domain-node-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span>Domain</span><wbr/><span><span>Node</span></span>",permalink:"/graph-glue/api/io.github.graphglue.model/-domain-node/index-"},next:{title:"<span>top</span><wbr/><span>Level</span><wbr/><span>Query</span><wbr/><span><span>Name</span></span>",permalink:"/graph-glue/api/io.github.graphglue.model/-domain-node/top-level-query-name-"}},u={},m=[],c={toc:m};function g(a){var n=a.components,e=(0,t.Z)(a,i);return(0,o.kt)("wrapper",(0,s.Z)({},c,e,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"domainnode"},(0,o.kt)("span",null,"Domain"),(0,o.kt)("wbr",null),(0,o.kt)("span",null,(0,o.kt)("span",null,"Node"))),(0,o.kt)(p.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">fun </span><a href="-domain-node-"><span class="token function">DomainNode</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">topLevelQueryName<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html">String</a><span class="token operator"> = </span><span class="token string">""</span></span></span><span class="token punctuation">)</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>top</span><wbr><span>Level</span><wbr><span>Query</span><wbr><span><span>Name</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">If not empty, a top level query of this node type is available with the given name</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}g.isMDXComponent=!0}}]);