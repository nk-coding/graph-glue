"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[34544],{60969:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>p,default:()=>g,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var t=n(87462),s=(n(67294),n(3905)),o=n(56923);const i={},p="nodes",r={unversionedId:"api/graphglue-core/io.github.graphglue.connection.model/-connection/nodes-",id:"api/graphglue-core/io.github.graphglue.connection.model/-connection/nodes-",title:"nodes",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.model/-connection/nodes-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.model/-connection",slug:"/api/graphglue-core/io.github.graphglue.connection.model/-connection/nodes-",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.model/-connection/nodes-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"edges",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.model/-connection/edges-"},next:{title:"pageInfo",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.model/-connection/page-info-"}},l={},c=[],d={toc:c};function g(a){let{components:e,...n}=a;return(0,s.kt)("wrapper",(0,t.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"nodes"},"nodes"),(0,s.kt)(o.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":graphglue-core:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">fun </span><a href="nodes-"><span class="token function">nodes</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">dataFetchingEnvironment<span class="token operator">: </span><span data-unresolved-link="graphql.schema/DataFetchingEnvironment///PointingToDeclaration/">DataFetchingEnvironment</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="graphql.execution/DataFetcherResult///PointingToDeclaration/">DataFetcherResult</span><span class="token operator">&lt;</span><span class="token keyword"></span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="index-">T</a><span class="token operator">&gt;</span><span class="token operator">&gt;</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><p class="paragraph">Returns the nodes and sets the local context necessary to use caching</p><h4 class="">Return</h4><p class="paragraph">all nodes and the local context necessary for caching</p><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":graphglue-core:dokkaHtmlPartial/main" data-filterable-set=":graphglue-core:dokkaHtmlPartial/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>data</span><wbr><span>Fetching</span><wbr><span><span>Environment</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">defines how the query fetches data</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}g.isMDXComponent=!0}}]);