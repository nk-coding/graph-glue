"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2070],{95996:function(a,n,e){e.r(n),e.d(n,{assets:function(){return d},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return r},metadata:function(){return u},toc:function(){return c}});var t=e(87462),s=e(63366),p=(e(67294),e(3905)),o=e(56923),i=["components"],r={},l="<span>only</span><wbr/><span>On</span><wbr/><span><span>Types</span></span>",u={unversionedId:"api/io.github.graphglue.data.execution/-node-sub-query/only-on-types-",id:"api/io.github.graphglue.data.execution/-node-sub-query/only-on-types-",title:"<span>only</span><wbr/><span>On</span><wbr/><span><span>Types</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.data.execution/-node-sub-query/only-on-types-.mdx",sourceDirName:"api/io.github.graphglue.data.execution/-node-sub-query",slug:"/api/io.github.graphglue.data.execution/-node-sub-query/only-on-types-",permalink:"/graph-glue/api/io.github.graphglue.data.execution/-node-sub-query/only-on-types-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span>Node</span><wbr/><span>Sub</span><wbr/><span><span>Query</span></span>",permalink:"/graph-glue/api/io.github.graphglue.data.execution/-node-sub-query/-node-sub-query-"},next:{title:"<span><span>query</span></span>",permalink:"/graph-glue/api/io.github.graphglue.data.execution/-node-sub-query/query-"}},d={},c=[],b={toc:c};function g(a){var n=a.components,e=(0,s.Z)(a,i);return(0,p.kt)("wrapper",(0,t.Z)({},b,e,{components:n,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"onlyontypes"},(0,p.kt)("span",null,"only"),(0,p.kt)("wbr",null),(0,p.kt)("span",null,"On"),(0,p.kt)("wbr",null),(0,p.kt)("span",null,(0,p.kt)("span",null,"Types"))),(0,p.kt)(o.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">val </span><a href="only-on-types-">onlyOnTypes</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="../../io.github.graphglue.definition/-node-definition/index-">NodeDefinition</a><span class="token operator">&gt;</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>only</span><wbr><span>On</span><wbr><span><span>Types</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">a list of parent types on which this should be evaluated</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}g.isMDXComponent=!0}}]);