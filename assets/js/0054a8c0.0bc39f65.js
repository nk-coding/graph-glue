"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1520],{13595:function(a,e,t){t.r(e),t.d(e,{assets:function(){return c},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return u}});var n=t(87462),s=t(63366),o=(t(67294),t(3905)),r=t(58909),p=["components"],i={},l="getFromGraphQL",d={unversionedId:"api/io.github.graphglue.model/-base-property/get-from-graph-q-l-",id:"api/io.github.graphglue.model/-base-property/get-from-graph-q-l-",title:"getFromGraphQL",description:"",source:"@site/docs/api/io.github.graphglue.model/-base-property/get-from-graph-q-l-.mdx",sourceDirName:"api/io.github.graphglue.model/-base-property",slug:"/api/io.github.graphglue.model/-base-property/get-from-graph-q-l-",permalink:"/graph-glue/api/io.github.graphglue.model/-base-property/get-from-graph-q-l-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"BaseProperty",permalink:"/graph-glue/api/io.github.graphglue.model/-base-property/-base-property-"},next:{title:"Connection",permalink:"/graph-glue/api/io.github.graphglue.model/-connection/index-"}},c={},u=[],g={toc:u};function h(a){var e=a.components,t=(0,s.Z)(a,p);return(0,o.kt)("wrapper",(0,n.Z)({},g,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getfromgraphql"},"getFromGraphQL"),(0,o.kt)(r.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword">suspend </span><span class="token keyword">fun </span><a href="get-from-graph-q-l-"><span class="token function">getFromGraphQL</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter "><span><span class="token annotation">@</span><span data-unresolved-link="org.springframework.beans.factory.annotation/Autowired///PointingToDeclaration/"><span class="token annotation">Autowired</span></span>&nbsp;</span>nodeQueryParser<span class="token operator">: </span><a href="../../io.github.graphglue.data.execution/-node-query-parser/index-">NodeQueryParser</a><span class="token punctuation">, </span></span><span class="parameter ">dataFetchingEnvironment<span class="token operator">: </span><span data-unresolved-link="graphql.schema/DataFetchingEnvironment///PointingToDeclaration/">DataFetchingEnvironment</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="graphql.execution/DataFetcherResult///PointingToDeclaration/">DataFetcherResult</span><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><p class="paragraph">Gets the result of a GraphQL query Uses the cache to obtain the result, and if no cache entry was found, creates a new database query and executes it Uses <span data-unresolved-link="io.github.graphglue.model/BaseProperty/constructGraphQLResult/#io.github.graphglue.data.execution.NodeQueryResult[TypeParam(bounds=[io.github.graphglue.model.Node?])]#io.github.graphglue.data.execution.NodeQuery?#io.github.graphglue.data.execution.NodeQueryParser/PointingToDeclaration/">constructGraphQLResult</span> to create the final result</p><h4 class="">Return</h4><p class="paragraph">the result, including a new local context</p><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>node</span><wbr><span>Query</span><wbr><span><span>Parser</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">used to obtain the <a href="../../io.github.graphglue.definition/-node-definition-collection/index-">NodeDefinitionCollection</a> and <span data-unresolved-link="com.fasterxml.jackson.databind/ObjectMapper///PointingToDeclaration/">ObjectMapper</span></p></div></div></div></div></div><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>data</span><wbr><span>Fetching</span><wbr><span><span>Environment</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">environment to fetch data, used to parse subtree of fetched nodes</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}h.isMDXComponent=!0}}]);