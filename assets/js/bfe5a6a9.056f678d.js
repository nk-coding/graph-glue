"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6912],{60882:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>n,metadata:()=>i,toc:()=>l});var a=o(87462),p=(o(67294),o(3905)),r=o(56923);const n={},s="hasNext",i={unversionedId:"api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator/has-next-",id:"api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator/has-next-",title:"hasNext",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator/has-next-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator",slug:"/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator/has-next-",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator/has-next-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"NodeSetIterator",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator/-node-set-iterator-"},next:{title:"next",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.model.property/-node-set-property-delegate/-node-set-property/-node-set-iterator/next-"}},d={},l=[],g={toc:l};function c(e){let{components:t,...o}=e;return(0,p.kt)("wrapper",(0,a.Z)({},g,o,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"hasnext"},"hasNext"),(0,p.kt)(r.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":graphglue-core:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword">open </span><span class="token keyword">operator override </span><span class="token keyword">fun </span><a href="has-next-"><span class="token function">hasNext</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html">Boolean</a><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div></div></div>\n',mdxType:"DokkaComponent"}))}c.isMDXComponent=!0}}]);