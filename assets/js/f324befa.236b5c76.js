"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8888],{10457:(a,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var t=r(87462),o=(r(67294),r(3905)),n=r(56923);const i={},p="nodeQueryParser",s={unversionedId:"api/graphglue-core/io.github.graphglue.data/-lazy-loading-context/node-query-parser-",id:"api/graphglue-core/io.github.graphglue.data/-lazy-loading-context/node-query-parser-",title:"nodeQueryParser",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data/-lazy-loading-context/node-query-parser-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data/-lazy-loading-context",slug:"/api/graphglue-core/io.github.graphglue.data/-lazy-loading-context/node-query-parser-",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.data/-lazy-loading-context/node-query-parser-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"neo4jMappingContext",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.data/-lazy-loading-context/neo4j-mapping-context-"},next:{title:"GRAPHGLUE_NEO4J_OPERATIONS_BEAN_NAME",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.data/-g-r-a-p-h-g-l-u-e_-n-e-o4-j_-o-p-e-r-a-t-i-o-n-s_-b-e-a-n_-n-a-m-e-"}},l={},d=[],g={toc:d};function u(a){let{components:e,...r}=a;return(0,o.kt)("wrapper",(0,t.Z)({},g,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"nodequeryparser"},"nodeQueryParser"),(0,o.kt)(n.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":graphglue-core:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">val </span><a href="node-query-parser-">nodeQueryParser</a><span class="token operator">: </span><a href="../../io.github.graphglue.data.execution/-node-query-parser/index-">NodeQueryParser</a><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":graphglue-core:dokkaHtmlPartial/main" data-filterable-set=":graphglue-core:dokkaHtmlPartial/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>node</span><wbr><span>Query</span><wbr><span><span>Parser</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">used to generate the Cypher query</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}u.isMDXComponent=!0}}]);