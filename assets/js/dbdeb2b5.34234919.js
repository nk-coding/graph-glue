"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8002],{32485:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return d},default:function(){return k},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c}});var a=n(87462),o=n(63366),s=(n(67294),n(3905)),p=n(56923),r=["components"],i={},d="<span>Node</span><wbr/><span>Set</span><wbr/><span><span>Iterator</span></span>",l={unversionedId:"api/io.github.graphglue.model/-node-set-property/-node-set/-node-set-iterator/-node-set-iterator-",id:"api/io.github.graphglue.model/-node-set-property/-node-set/-node-set-iterator/-node-set-iterator-",title:"<span>Node</span><wbr/><span>Set</span><wbr/><span><span>Iterator</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.model/-node-set-property/-node-set/-node-set-iterator/-node-set-iterator-.mdx",sourceDirName:"api/io.github.graphglue.model/-node-set-property/-node-set/-node-set-iterator",slug:"/api/io.github.graphglue.model/-node-set-property/-node-set/-node-set-iterator/-node-set-iterator-",permalink:"/graph-glue/api/io.github.graphglue.model/-node-set-property/-node-set/-node-set-iterator/-node-set-iterator-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span>Node</span><wbr/><span>Set</span><wbr/><span><span>Iterator</span></span>",permalink:"/graph-glue/api/io.github.graphglue.model/-node-set-property/-node-set/-node-set-iterator/index-"},next:{title:"<span>has</span><wbr/><span><span>Next</span></span>",permalink:"/graph-glue/api/io.github.graphglue.model/-node-set-property/-node-set/-node-set-iterator/has-next-"}},u={},c=[],g={toc:c};function k(e){var t=e.components,n=(0,o.Z)(e,r);return(0,s.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"nodesetiterator"},(0,s.kt)("span",null,"Node"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,"Set"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,(0,s.kt)("span",null,"Iterator"))),(0,s.kt)(p.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">fun </span><a href="-node-set-iterator-"><span class="token function">NodeSetIterator</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">parentIterator<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/index.html">MutableIterator</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="../../index-">T</a><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div></div></div>\n',mdxType:"DokkaComponent"}))}k.isMDXComponent=!0}}]);