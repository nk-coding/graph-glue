"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[24198],{68963:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var t=a(87462),n=(a(67294),a(3905)),o=a(56923);const r={},l="filterDefinitionCollection",s={unversionedId:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-parser/filter-definition-collection-",id:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-parser/filter-definition-collection-",title:"filterDefinitionCollection",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.data.execution/-node-query-parser/filter-definition-collection-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.data.execution/-node-query-parser",slug:"/api/graphglue-core/io.github.graphglue.data.execution/-node-query-parser/filter-definition-collection-",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.data.execution/-node-query-parser/filter-definition-collection-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"NodeQueryParser",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.data.execution/-node-query-parser/-node-query-parser-"},next:{title:"generateManyNodeQuery",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.data.execution/-node-query-parser/generate-many-node-query-"}},p={},d=[],c={toc:d};function u(e){let{components:i,...a}=e;return(0,n.kt)("wrapper",(0,t.Z)({},c,a,{components:i,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"filterdefinitioncollection"},"filterDefinitionCollection"),(0,n.kt)(o.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":graphglue-core:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">val </span><a href="filter-definition-collection-">filterDefinitionCollection</a><span class="token operator">: </span><a href="../../io.github.graphglue.connection.filter.definition/-filter-definition-collection/index-">FilterDefinitionCollection</a><span class="token operator">?</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":graphglue-core:dokkaHtmlPartial/main" data-filterable-set=":graphglue-core:dokkaHtmlPartial/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>filter</span><wbr><span>Definition</span><wbr><span><span>Collection</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">used to get the <a href="../../io.github.graphglue.connection.filter.definition/-filter-definition/index-">FilterDefinition</a> for a specific <a href="../../io.github.graphglue.model/-node/index-">Node</a>, if existing</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}u.isMDXComponent=!0}}]);