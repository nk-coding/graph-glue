"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1426],{85266:function(a,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return i},default:function(){return g},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return h}});var s=t(87462),e=t(63366),o=(t(67294),t(3905)),r=t(56923),p=["components"],c={},i="<span>Schema</span><wbr/><span>Transformation</span><wbr/><span><span>Context</span></span>",l={unversionedId:"api/io.github.graphglue.graphql.schema/-schema-transformation-context/-schema-transformation-context-",id:"api/io.github.graphglue.graphql.schema/-schema-transformation-context/-schema-transformation-context-",title:"<span>Schema</span><wbr/><span>Transformation</span><wbr/><span><span>Context</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.graphql.schema/-schema-transformation-context/-schema-transformation-context-.mdx",sourceDirName:"api/io.github.graphglue.graphql.schema/-schema-transformation-context",slug:"/api/io.github.graphglue.graphql.schema/-schema-transformation-context/-schema-transformation-context-",permalink:"/graph-glue/api/io.github.graphglue.graphql.schema/-schema-transformation-context/-schema-transformation-context-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span>Schema</span><wbr/><span>Transformation</span><wbr/><span><span>Context</span></span>",permalink:"/graph-glue/api/io.github.graphglue.graphql.schema/-schema-transformation-context/index-"},next:{title:"<span>code</span><wbr/><span><span>Registry</span></span>",permalink:"/graph-glue/api/io.github.graphglue.graphql.schema/-schema-transformation-context/code-registry-"}},m={},h=[],u={toc:h};function g(a){var n=a.components,t=(0,e.Z)(a,p);return(0,o.kt)("wrapper",(0,s.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"schematransformationcontext"},(0,o.kt)("span",null,"Schema"),(0,o.kt)("wbr",null),(0,o.kt)("span",null,"Transformation"),(0,o.kt)("wbr",null),(0,o.kt)("span",null,(0,o.kt)("span",null,"Context"))),(0,o.kt)(r.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">fun </span><a href="-schema-transformation-context-"><span class="token function">SchemaTransformationContext</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">context<span class="token operator">: </span><span data-unresolved-link="graphql.util/TraverserContext///PointingToDeclaration/">TraverserContext</span><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">schemaTransformer<span class="token operator">: </span><a href="../-schema-transformer/index-">SchemaTransformer</a></span></span><span class="token punctuation">)</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div></div></div>\n',mdxType:"DokkaComponent"}))}g.isMDXComponent=!0}}]);