"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8963],{55657:function(a,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return u},default:function(){return b},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return c}});var t=n(87462),s=n(63366),p=(n(67294),n(3905)),r=n(56923),o=["components"],i={},u="<span>Node</span><wbr/><span>Query</span><wbr/><span><span>Part</span></span>",d={unversionedId:"api/io.github.graphglue.data.execution/-node-query-part/-node-query-part-",id:"api/io.github.graphglue.data.execution/-node-query-part/-node-query-part-",title:"<span>Node</span><wbr/><span>Query</span><wbr/><span><span>Part</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.data.execution/-node-query-part/-node-query-part-.mdx",sourceDirName:"api/io.github.graphglue.data.execution/-node-query-part",slug:"/api/io.github.graphglue.data.execution/-node-query-part/-node-query-part-",permalink:"/graph-glue/api/io.github.graphglue.data.execution/-node-query-part/-node-query-part-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span>Node</span><wbr/><span>Query</span><wbr/><span><span>Part</span></span>",permalink:"/graph-glue/api/io.github.graphglue.data.execution/-node-query-part/index-"},next:{title:"<span>get</span><wbr/><span>Sub</span><wbr/><span><span>Query</span></span>",permalink:"/graph-glue/api/io.github.graphglue.data.execution/-node-query-part/get-sub-query-"}},l={},c=[],g={toc:c};function b(a){var e=a.components,n=(0,s.Z)(a,o);return(0,p.kt)("wrapper",(0,t.Z)({},g,n,{components:e,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"nodequerypart"},(0,p.kt)("span",null,"Node"),(0,p.kt)("wbr",null),(0,p.kt)("span",null,"Query"),(0,p.kt)("wbr",null),(0,p.kt)("span",null,(0,p.kt)("span",null,"Part"))),(0,p.kt)(r.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">fun </span><a href="-node-query-part-"><span class="token function">NodeQueryPart</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">subQueries<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="../-node-sub-query/index-">NodeSubQuery</a><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>sub</span><wbr><span><span>Queries</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">the list of <a href="../-node-sub-query/index-">NodeSubQuery</a>s</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}b.isMDXComponent=!0}}]);