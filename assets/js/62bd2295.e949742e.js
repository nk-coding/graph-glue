"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9551],{48818:function(a,e,n){n.r(e),n.d(e,{assets:function(){return d},contentTitle:function(){return o},default:function(){return g},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return f}});var t=n(87462),i=n(63366),s=(n(67294),n(3905)),r=n(56923),p=["components"],l={},o="<span>generate</span><wbr/><span>Filter</span><wbr/><span><span>Entry</span></span>",c={unversionedId:"api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/generate-filter-entry-",id:"api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/generate-filter-entry-",title:"<span>generate</span><wbr/><span>Filter</span><wbr/><span><span>Entry</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/generate-filter-entry-.mdx",sourceDirName:"api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base",slug:"/api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/generate-filter-entry-",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/generate-filter-entry-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span><span>description</span></span>",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/description-"},next:{title:"<span><span>name</span></span>",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/name-"}},d={},f=[],u={toc:f};function g(a){var e=a.components,n=(0,i.Z)(a,p);return(0,s.kt)("wrapper",(0,t.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"generatefilterentry"},(0,s.kt)("span",null,"generate"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,"Filter"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,(0,s.kt)("span",null,"Entry"))),(0,s.kt)(r.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword">abstract </span><span class="token keyword"></span><span class="token keyword">fun </span><a href="generate-filter-entry-"><span class="token function">generateFilterEntry</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">scalarType<span class="token operator">: </span><span data-unresolved-link="graphql.schema/GraphQLInputType///PointingToDeclaration/">GraphQLInputType</span><span class="token punctuation">, </span></span><span class="parameter ">neo4jName<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html">String</a></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="../../io.github.graphglue.connection.filter.definition/-filter-entry-definition/index-">FilterEntryDefinition</a><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><p class="paragraph">Generates the <a href="../../io.github.graphglue.connection.filter.definition/-filter-entry-definition/index-">FilterEntryDefinition</a> used in the filter</p><h4 class="">Return</h4><p class="paragraph">the generated definition of the filter entry</p><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>scalar</span><wbr><span><span>Type</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">the type of the GraphQL filter field</p></div></div></div></div></div><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>neo4j</span><wbr><span><span>Name</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">the name of the property of the node in the database (might be different from <a href="name-">name</a>)</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}g.isMDXComponent=!0}}]);