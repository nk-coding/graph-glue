"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1930],{73837:function(n,a,e){e.r(a),e.d(a,{assets:function(){return c},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return r},metadata:function(){return d},toc:function(){return u}});var t=e(87462),i=e(63366),s=(e(67294),e(3905)),o=e(56923),p=["components"],r={},l="<span>get</span><wbr/><span>Node</span><wbr/><span>Definitions</span><wbr/><span>From</span><wbr/><span>Graph</span><wbr/><span><span>QLNames</span></span>",d={unversionedId:"api/io.github.graphglue.definition/-node-definition-collection/get-node-definitions-from-graph-q-l-names-",id:"api/io.github.graphglue.definition/-node-definition-collection/get-node-definitions-from-graph-q-l-names-",title:"<span>get</span><wbr/><span>Node</span><wbr/><span>Definitions</span><wbr/><span>From</span><wbr/><span>Graph</span><wbr/><span><span>QLNames</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.definition/-node-definition-collection/get-node-definitions-from-graph-q-l-names-.mdx",sourceDirName:"api/io.github.graphglue.definition/-node-definition-collection",slug:"/api/io.github.graphglue.definition/-node-definition-collection/get-node-definitions-from-graph-q-l-names-",permalink:"/graph-glue/api/io.github.graphglue.definition/-node-definition-collection/get-node-definitions-from-graph-q-l-names-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span>get</span><wbr/><span>Node</span><wbr/><span><span>Definition</span></span>",permalink:"/graph-glue/api/io.github.graphglue.definition/-node-definition-collection/get-node-definition-"},next:{title:"<span>Node</span><wbr/><span>Schema</span><wbr/><span><span>Exception</span></span>",permalink:"/graph-glue/api/io.github.graphglue.definition/-node-schema-exception/index-"}},c={},u=[],f={toc:u};function g(n){var a=n.components,e=(0,i.Z)(n,p);return(0,s.kt)("wrapper",(0,t.Z)({},f,e,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"getnodedefinitionsfromgraphqlnames"},(0,s.kt)("span",null,"get"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,"Node"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,"Definitions"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,"From"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,"Graph"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,(0,s.kt)("span",null,"QLNames"))),(0,s.kt)(o.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">fun </span><a href="get-node-definitions-from-graph-q-l-names-"><span class="token function">getNodeDefinitionsFromGraphQLNames</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">names<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html">String</a><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="../-node-definition/index-">NodeDefinition</a><span class="token operator">&gt;</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><p class="paragraph">Gets the list of <a href="../-node-definition/index-">NodeDefinition</a>s associated with names If a common supertype is found (and the provided names include all subtypes), returns that supertype Otherwise the provied list is mapped to <a href="../-node-definition/index-">NodeDefinition</a>s</p><h4 class="">Return</h4><p class="paragraph">the found <a href="../-node-definition/index-">NodeDefinition</a>s</p><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span><span>names</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">the list of GraphQL names</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}g.isMDXComponent=!0}}]);