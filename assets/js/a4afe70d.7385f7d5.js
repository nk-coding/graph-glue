"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[21875],{90962:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var i=a(87462),n=(a(67294),a(3905)),r=a(56923);const o={},s="nodeFilterGenerators",l={unversionedId:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/node-filter-generators-",id:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/node-filter-generators-",title:"nodeFilterGenerators",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/node-filter-generators-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator",slug:"/api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/node-filter-generators-",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/node-filter-generators-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"nodeDefinitionCollection",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.filter.definition/-sub-filter-generator/node-definition-collection-"},next:{title:"generateFilterDefinition",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.filter.definition/generate-filter-definition-"}},p={},d=[],g={toc:d};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,i.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"nodefiltergenerators"},"nodeFilterGenerators"),(0,n.kt)(r.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":graphglue-core:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">val </span><a href="node-filter-generators-">nodeFilterGenerators</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="../../io.github.graphglue.connection.filter/-node-filter-generator/index-">NodeFilterGenerator</a><span class="token operator">&gt;</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":graphglue-core:dokkaHtmlPartial/main" data-filterable-set=":graphglue-core:dokkaHtmlPartial/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>node</span><wbr><span>Filter</span><wbr><span><span>Generators</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">generators for additional filter entries</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}c.isMDXComponent=!0}}]);