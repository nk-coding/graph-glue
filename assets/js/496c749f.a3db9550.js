"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[346],{8224:function(a,e,n){n.r(e),n.d(e,{assets:function(){return c},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return r},metadata:function(){return l},toc:function(){return u}});var t=n(87462),s=n(63366),o=(n(67294),n(3905)),i=n(58909),p=["components"],r={},d="node",l={unversionedId:"api/io.github.graphglue.model/-edge/node-",id:"api/io.github.graphglue.model/-edge/node-",title:"node",description:"",source:"@site/docs/api/io.github.graphglue.model/-edge/node-.mdx",sourceDirName:"api/io.github.graphglue.model/-edge",slug:"/api/io.github.graphglue.model/-edge/node-",permalink:"/graph-glue/api/io.github.graphglue.model/-edge/node-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"cursor",permalink:"/graph-glue/api/io.github.graphglue.model/-edge/cursor-"},next:{title:"FilterProperty",permalink:"/graph-glue/api/io.github.graphglue.model/-filter-property/index-"}},c={},u=[],g={toc:u};function h(a){var e=a.components,n=(0,s.Z)(a,p);return(0,o.kt)("wrapper",(0,t.Z)({},g,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"node"},"node"),(0,o.kt)(i.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">fun </span><a href="node-"><span class="token function">node</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">dataFetchingEnvironment<span class="token operator">: </span><span data-unresolved-link="graphql.schema/DataFetchingEnvironment///PointingToDeclaration/">DataFetchingEnvironment</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="graphql.execution/DataFetcherResult///PointingToDeclaration/">DataFetcherResult</span><span class="token operator">&lt;</span><span class="token keyword"></span><a href="index-">T</a><span class="token operator">&gt;</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><p class="paragraph">Returns the node of the edge and sets the local context necessary to use caching</p><h4 class="">Return</h4><p class="paragraph">the node and the local context necessary for caching</p><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>data</span><wbr><span>Fetching</span><wbr><span><span>Environment</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">defines how the query fetches data</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}h.isMDXComponent=!0}}]);