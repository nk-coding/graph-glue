"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[14906],{71019:(a,n,e)=>{e.r(n),e.d(n,{assets:()=>l,contentTitle:()=>p,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>g});var o=e(87462),t=(e(67294),e(3905)),s=e(56923);const r={},p="nodeIdGenerator",i={unversionedId:"api/graphglue-core/io.github.graphglue.model/-graphglue-model-configuration/node-id-generator-",id:"api/graphglue-core/io.github.graphglue.model/-graphglue-model-configuration/node-id-generator-",title:"nodeIdGenerator",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.model/-graphglue-model-configuration/node-id-generator-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.model/-graphglue-model-configuration",slug:"/api/graphglue-core/io.github.graphglue.model/-graphglue-model-configuration/node-id-generator-",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.model/-graphglue-model-configuration/node-id-generator-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"GraphglueModelConfiguration",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.model/-graphglue-model-configuration/-graphglue-model-configuration-"},next:{title:"Node",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.model/-node/index-"}},l={},g=[],d={toc:g};function c(a){let{components:n,...e}=a;return(0,t.kt)("wrapper",(0,o.Z)({},d,e,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"nodeidgenerator"},"nodeIdGenerator"),(0,t.kt)(s.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":graphglue-core:dokkaHtmlPartial/main"><div class="symbol monospace"><div class="block"><div class="block"><span class="token annotation">@</span><span data-unresolved-link="org.springframework.context.annotation/Bean///PointingToDeclaration/"><span class="token annotation">Bean</span></span><span class="token punctuation">(</span><span>value<span class="token operator"> = </span><span class="token punctuation">[</span><span><span class="breakable-word"><span class="token string">"nodeIdGenerator"</span></span></span><wbr><span class="token punctuation">]</span></span><wbr><span class="token punctuation">)</span></div><div class="block"><span class="token annotation">@</span><span data-unresolved-link="org.springframework.boot.autoconfigure.condition/ConditionalOnMissingBean///PointingToDeclaration/"><span class="token annotation">ConditionalOnMissingBean</span></span></div></div><span class="token keyword"></span><span class="token keyword">fun </span><a href="node-id-generator-"><span class="token function">nodeIdGenerator</span></a><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="org.springframework.data.neo4j.core.support/UUIDStringGenerator///PointingToDeclaration/">UUIDStringGenerator</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><p class="paragraph">Default node id generator</p><h4 class="">Return</h4><p class="paragraph">the generator for node ids</p></div></div>\n',mdxType:"DokkaComponent"}))}c.isMDXComponent=!0}}]);