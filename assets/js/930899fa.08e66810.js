"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[76377],{56969:(a,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>p,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var t=r(87462),s=(r(67294),r(3905)),n=r(56923);const o={},p="generateOrders",i={unversionedId:"api/graphglue-core/io.github.graphglue.connection.order/generate-orders-",id:"api/graphglue-core/io.github.graphglue.connection.order/generate-orders-",title:"generateOrders",description:"",source:"@site/docs/api/graphglue-core/io.github.graphglue.connection.order/generate-orders-.mdx",sourceDirName:"api/graphglue-core/io.github.graphglue.connection.order",slug:"/api/graphglue-core/io.github.graphglue.connection.order/generate-orders-",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.order/generate-orders-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"IdOrder",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.order/-id-order-"},next:{title:"parseOrder",permalink:"/graph-glue/api/graphglue-core/io.github.graphglue.connection.order/parse-order-"}},l={},d=[],c={toc:d};function g(a){let{components:e,...r}=a;return(0,s.kt)("wrapper",(0,t.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"generateorders"},"generateOrders"),(0,s.kt)(n.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":graphglue-core:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">fun </span><span class="token operator">&lt;</span><span class="token keyword"></span><a href="generate-orders-">T</a><span class="token operator"> : </span><a href="../io.github.graphglue.model/-node/index-">Node</a><span class="token operator">&gt; </span><a href="generate-orders-"><span class="token function">generateOrders</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">type<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.reflect/-k-class/index.html">KClass</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="generate-orders-">T</a><span class="token operator">&gt;</span><span class="token punctuation">, </span></span><span class="parameter ">persistentEntity<span class="token operator">: </span><span data-unresolved-link="org.springframework.data.neo4j.core.mapping/Neo4jPersistentEntity///PointingToDeclaration/">Neo4jPersistentEntity</span><span class="token operator">&lt;</span><span class="token operator">*</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-map/index.html">Map</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span><span class="token keyword"></span><a href="-order-field/index-">OrderField</a><span class="token operator">&lt;</span><span class="token keyword"></span><a href="generate-orders-">T</a><span class="token operator">&gt;</span><span class="token operator">&gt;</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><p class="paragraph">Generates a map from order field name (enum casing) to <a href="-order-field/index-">OrderField</a>. The <a href="-order-field/index-">OrderField</a>s are detected based on the <a href="../io.github.graphglue.model/-order-property/index-">OrderProperty</a> annotation.</p><h4 class="">Return</h4><p class="paragraph">a map from order field enum name to  <a href="-order-field/index-">OrderField</a></p><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":graphglue-core:dokkaHtmlPartial/main" data-filterable-set=":graphglue-core:dokkaHtmlPartial/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span><span>T</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">the type of <a href="../io.github.graphglue.model/-node/index-">Node</a> for which the <a href="-order-field/index-">OrderField</a>s should be generated</p></div></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core:dokkaHtmlPartial/main" data-filterable-set=":graphglue-core:dokkaHtmlPartial/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span><span>type</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">the class of <a href="generate-orders-">T</a></p></div></div></div></div></div><div class="table-row" data-filterable-current=":graphglue-core:dokkaHtmlPartial/main" data-filterable-set=":graphglue-core:dokkaHtmlPartial/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>persistent</span><wbr><span><span>Entity</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">used to get the name of the property in the database</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}g.isMDXComponent=!0}}]);