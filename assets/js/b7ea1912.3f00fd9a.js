"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9870],{82698:function(n,a,e){e.r(a),e.d(a,{assets:function(){return d},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return u}});var t=e(87462),s=e(63366),i=(e(67294),e(3905)),o=e(56923),r=["components"],p={},l="<span>condition</span><wbr/><span><span>Generator</span></span>",c={unversionedId:"api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/condition-generator-",id:"api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/condition-generator-",title:"<span>condition</span><wbr/><span><span>Generator</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/condition-generator-.mdx",sourceDirName:"api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base",slug:"/api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/condition-generator-",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/condition-generator-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span>Scalar</span><wbr/><span>Filter</span><wbr/><span>Entry</span><wbr/><span><span>Base</span></span>",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/-scalar-filter-entry-base-"},next:{title:"<span><span>description</span></span>",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.definition.scalars/-scalar-filter-entry-base/description-"}},d={},u=[],g={toc:u};function f(n){var a=n.components,e=(0,s.Z)(n,r);return(0,i.kt)("wrapper",(0,t.Z)({},g,e,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"conditiongenerator"},(0,i.kt)("span",null,"condition"),(0,i.kt)("wbr",null),(0,i.kt)("span",null,(0,i.kt)("span",null,"Generator"))),(0,i.kt)(o.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">val </span><a href="condition-generator-">conditionGenerator</a><span class="token operator">: </span><span class="token punctuation">(</span><span class="token keyword"></span>property<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Property///PointingToDeclaration/">Property</span><span class="token punctuation">, </span><span class="token keyword"></span>value<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Expression///PointingToDeclaration/">Expression</span><span class="token punctuation">)</span><span class="token operator"> -&gt; </span><span class="token keyword"></span><span data-unresolved-link="org.neo4j.cypherdsl.core/Condition///PointingToDeclaration/">Condition</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>condition</span><wbr><span><span>Generator</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">used to generate the condition which applies the filter in the database</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}f.isMDXComponent=!0}}]);