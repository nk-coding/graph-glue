"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7907],{32285:function(n,a,e){e.r(a),e.d(a,{assets:function(){return c},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return r},metadata:function(){return d},toc:function(){return u}});var t=e(87462),i=e(63366),o=(e(67294),e(3905)),s=e(56923),p=["components"],r={},l="<span>generate</span><wbr/><span><span>Condition</span></span>",d={unversionedId:"api/io.github.graphglue.connection.filter.model/-filter/generate-condition-",id:"api/io.github.graphglue.connection.filter.model/-filter/generate-condition-",title:"<span>generate</span><wbr/><span><span>Condition</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.connection.filter.model/-filter/generate-condition-.mdx",sourceDirName:"api/io.github.graphglue.connection.filter.model/-filter",slug:"/api/io.github.graphglue.connection.filter.model/-filter/generate-condition-",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.model/-filter/generate-condition-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span><span>Filter</span></span>",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.model/-filter/-filter-"},next:{title:"<span>meta</span><wbr/><span><span>Filter</span></span>",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.model/-filter/meta-filter-"}},c={},u=[],g={toc:u};function h(n){var a=n.components,e=(0,i.Z)(n,p);return(0,o.kt)("wrapper",(0,t.Z)({},g,e,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"generatecondition"},(0,o.kt)("span",null,"generate"),(0,o.kt)("wbr",null),(0,o.kt)("span",null,(0,o.kt)("span",null,"Condition"))),(0,o.kt)(s.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword">open </span><span class="token keyword">override </span><span class="token keyword">fun </span><a href="generate-condition-"><span class="token function">generateCondition</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">node<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Node///PointingToDeclaration/">Node</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Condition///PointingToDeclaration/">Condition</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><p class="paragraph">Creates the condition</p><h4 class="">Return</h4><p class="paragraph">the generated Condition</p><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span><span>node</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">the node for which the condition is generated</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}h.isMDXComponent=!0}}]);