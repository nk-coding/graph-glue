"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8563],{13557:function(n,e,i){i.r(e),i.d(e,{assets:function(){return d},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return f}});var a=i(87462),t=i(63366),r=(i(67294),i(3905)),s=i(56923),o=["components"],p={},l="<span>filter</span><wbr/><span>Definition</span><wbr/><span><span>Cache</span></span>",c={unversionedId:"api/io.github.graphglue.connection.filter.definition/-sub-filter-generator/filter-definition-cache-",id:"api/io.github.graphglue.connection.filter.definition/-sub-filter-generator/filter-definition-cache-",title:"<span>filter</span><wbr/><span>Definition</span><wbr/><span><span>Cache</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.connection.filter.definition/-sub-filter-generator/filter-definition-cache-.mdx",sourceDirName:"api/io.github.graphglue.connection.filter.definition/-sub-filter-generator",slug:"/api/io.github.graphglue.connection.filter.definition/-sub-filter-generator/filter-definition-cache-",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.definition/-sub-filter-generator/filter-definition-cache-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span>additional</span><wbr/><span>Filter</span><wbr/><span><span>Beans</span></span>",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.definition/-sub-filter-generator/additional-filter-beans-"},next:{title:"<span>filter</span><wbr/><span>For</span><wbr/><span><span>Property</span></span>",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.definition/-sub-filter-generator/filter-for-property-"}},d={},f=[],u={toc:f};function g(n){var e=n.components,i=(0,t.Z)(n,o);return(0,r.kt)("wrapper",(0,a.Z)({},u,i,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"filterdefinitioncache"},(0,r.kt)("span",null,"filter"),(0,r.kt)("wbr",null),(0,r.kt)("span",null,"Definition"),(0,r.kt)("wbr",null),(0,r.kt)("span",null,(0,r.kt)("span",null,"Cache"))),(0,r.kt)(s.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">val </span><a href="filter-definition-cache-">filterDefinitionCache</a><span class="token operator">: </span><a href="../index-#-1975008190%2FClasslikes%2F769193423">FilterDefinitionCache</a><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>filter</span><wbr><span>Definition</span><wbr><span><span>Cache</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">cache of already generated filters for <a href="../../io.github.graphglue.model/-node/index-">Node</a> types</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}g.isMDXComponent=!0}}]);