"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[354],{87208:function(a,e,t){t.r(e),t.d(e,{assets:function(){return d},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=t(87462),n=t(63366),s=(t(67294),t(3905)),p=t(56923),o=["components"],i={},l="<span>data</span><wbr/><span>Fetcher</span><wbr/><span>Factory</span><wbr/><span><span>Provider</span></span>",c={unversionedId:"api/io.github.graphglue.graphql.schema/-default-schema-transformer/data-fetcher-factory-provider-",id:"api/io.github.graphglue.graphql.schema/-default-schema-transformer/data-fetcher-factory-provider-",title:"<span>data</span><wbr/><span>Fetcher</span><wbr/><span>Factory</span><wbr/><span><span>Provider</span></span>",description:"",source:"@site/docs/api/io.github.graphglue.graphql.schema/-default-schema-transformer/data-fetcher-factory-provider-.mdx",sourceDirName:"api/io.github.graphglue.graphql.schema/-default-schema-transformer",slug:"/api/io.github.graphglue.graphql.schema/-default-schema-transformer/data-fetcher-factory-provider-",permalink:"/graph-glue/api/io.github.graphglue.graphql.schema/-default-schema-transformer/data-fetcher-factory-provider-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"<span>Default</span><wbr/><span>Schema</span><wbr/><span><span>Transformer</span></span>",permalink:"/graph-glue/api/io.github.graphglue.graphql.schema/-default-schema-transformer/-default-schema-transformer-"},next:{title:"<span>filter</span><wbr/><span>Definition</span><wbr/><span><span>Collection</span></span>",permalink:"/graph-glue/api/io.github.graphglue.graphql.schema/-default-schema-transformer/filter-definition-collection-"}},d={},u=[],h={toc:u};function f(a){var e=a.components,t=(0,n.Z)(a,o);return(0,s.kt)("wrapper",(0,r.Z)({},h,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"datafetcherfactoryprovider"},(0,s.kt)("span",null,"data"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,"Fetcher"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,"Factory"),(0,s.kt)("wbr",null),(0,s.kt)("span",null,(0,s.kt)("span",null,"Provider"))),(0,s.kt)(p.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword">open </span><span class="token keyword">override </span><span class="token keyword">val </span><a href="data-fetcher-factory-provider-">dataFetcherFactoryProvider</a><span class="token operator">: </span><span data-unresolved-link="com.expediagroup.graphql.generator.execution/KotlinDataFetcherFactoryProvider///PointingToDeclaration/">KotlinDataFetcherFactoryProvider</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span>data</span><wbr><span>Fetcher</span><wbr><span>Factory</span><wbr><span><span>Provider</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">provides function and property data fetchers</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}f.isMDXComponent=!0}}]);