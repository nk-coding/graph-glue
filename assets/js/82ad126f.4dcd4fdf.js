"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7377],{47214:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return g}});var a=t(87462),o=t(63366),i=(t(67294),t(3905)),r=t(56923),s=["components"],p={},d="generateCondition",l={unversionedId:"api/io.github.graphglue.connection.filter.model/-node-set-filter-entry/generate-condition-",id:"api/io.github.graphglue.connection.filter.model/-node-set-filter-entry/generate-condition-",title:"generateCondition",description:"",source:"@site/docs/api/io.github.graphglue.connection.filter.model/-node-set-filter-entry/generate-condition-.mdx",sourceDirName:"api/io.github.graphglue.connection.filter.model/-node-set-filter-entry",slug:"/api/io.github.graphglue.connection.filter.model/-node-set-filter-entry/generate-condition-",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.model/-node-set-filter-entry/generate-condition-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"filter",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.model/-node-set-filter-entry/filter-"},next:{title:"generatePredicate",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.model/-node-set-filter-entry/generate-predicate-"}},c={},g=[],u={toc:g};function h(e){var n=e.components,t=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"generatecondition"},"generateCondition"),(0,i.kt)(r.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword">open </span><span class="token keyword">override </span><span class="token keyword">fun </span><a href="generate-condition-"><span class="token function">generateCondition</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">node<span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Node///PointingToDeclaration/">Node</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><span data-unresolved-link="org.neo4j.cypherdsl.core/Condition///PointingToDeclaration/">Condition</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><p class="paragraph">Creates the condition</p><h4 class="">Return</h4><p class="paragraph">the generated <span data-unresolved-link="org.neo4j.cypherdsl.core/Condition///PointingToDeclaration/">Condition</span></p><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span><span>node</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">the node for which the condition is generated</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}h.isMDXComponent=!0}}]);