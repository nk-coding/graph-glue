"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9194],{73340:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return d},default:function(){return g},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var a=n(87462),i=n(63366),o=(n(67294),n(3905)),s=n(58909),r=["components"],l={},d="NoneNodeSetFilterEntry",p={unversionedId:"api/io.github.graphglue.connection.filter.model/-none-node-set-filter-entry/-none-node-set-filter-entry-",id:"api/io.github.graphglue.connection.filter.model/-none-node-set-filter-entry/-none-node-set-filter-entry-",title:"NoneNodeSetFilterEntry",description:"",source:"@site/docs/api/io.github.graphglue.connection.filter.model/-none-node-set-filter-entry/-none-node-set-filter-entry-.mdx",sourceDirName:"api/io.github.graphglue.connection.filter.model/-none-node-set-filter-entry",slug:"/api/io.github.graphglue.connection.filter.model/-none-node-set-filter-entry/-none-node-set-filter-entry-",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.model/-none-node-set-filter-entry/-none-node-set-filter-entry-",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"NoneNodeSetFilterEntry",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.model/-none-node-set-filter-entry/index-"},next:{title:"generatePredicate",permalink:"/graph-glue/api/io.github.graphglue.connection.filter.model/-none-node-set-filter-entry/generate-predicate-"}},c={},u=[],f={toc:u};function g(e){var t=e.components,n=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"nonenodesetfilterentry"},"NoneNodeSetFilterEntry"),(0,o.kt)(s.Z,{dokkaHTML:'\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-depenent-content" data-active="" data-togglable=":dokkaHtml/main"><div class="symbol monospace"><span class="token keyword"></span><span class="token keyword">fun </span><a href="-none-node-set-filter-entry-"><span class="token function">NoneNodeSetFilterEntry</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">definition<span class="token operator">: </span><a href="../../io.github.graphglue.connection.filter.definition/-node-sub-filter-definition/index-">NodeSubFilterDefinition</a><span class="token punctuation">, </span></span><span class="parameter ">filter<span class="token operator">: </span><a href="../-node-sub-filter/index-">NodeSubFilter</a></span></span><span class="token punctuation">)</span><span class="top-right-position"><span class="copy-icon"></span><div class="copy-popup-wrapper popup-to-left"><span class="copy-popup-icon"></span><span>Content copied to clipboard</span></div></span></div><h2 class="">Parameters</h2><div data-togglable="Parameters"><div class="table" data-togglable="Parameters"><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span><span>definition</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">associated definition of the entry</p></div></div></div></div></div><div class="table-row" data-filterable-current=":dokkaHtml/main" data-filterable-set=":dokkaHtml/main"><div class="main-subrow keyValue WithExtraAttributes"><div class=""><span class="inline-flex"><div><span><span>filter</span></span></div></span></div><div><div class="title"><div data-togglable="Parameters"><p class="paragraph">filter to filter the elements of the set</p></div></div></div></div></div></div></div></div></div>\n',mdxType:"DokkaComponent"}))}g.isMDXComponent=!0}}]);